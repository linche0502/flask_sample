使用方法:
  1. 直接點擊run.bat，然後就會自動使用免安裝版的python3.11.5的環境和套件，自動執行main.py
  2. 使用自己的環境。在使用之前要先確保requirements.txt內的套件是不是都已經安裝過了，沒有的話可以在自己的環境下用pip install -r requirements.txt來安裝需要的套件
     註: dlib很容易會安裝失敗，可以從https://github.com/Murtaza-Saeed/dlib/tree/master 下載對應自己python版本的.whl檔來手動安裝 pip install "C:\xx\...\dlib-19.xx-cpxx-win_amd64.whl"


這個demo是純採用網路上抓到的現成品來拼裝的，準確率隨緣
人臉辨識方面是用網路上直接抓下來的現有model來抓取攝影機捕捉到的人臉特徵，在從資料庫裡面的圖片一張張拿出來抓取圖片臉部特徵來比對
實務上要做的話還是用face_recognition直接跟已建立的特徵資料庫來比對會比較好，但..這邊就是我懶的訓練模型，所以才走偏方而已

後面chat部分，我是直接串接chatGPT的api，原因也是懶的訓練模型
**串接chatGPT的api要照流量付費，在此僅供小量測試用。要再做進一步的測試的話，請把app/model.py裡面的openai.api_key= 後面的值，改成自己的api key，不然我的餘額很快就會用完

這邊連接SQL的部分也是直接使用SQLite，而不是MySQL。因為之前SQL的課上完之後，AppServ馬上就被我刪掉了，內建的MySQL也無可避免的一起沒了。
但又有點懶得重裝MySQL，所以就直接使用不需要安裝的SQLite了。雖然還是有留MySQL的程式碼下來，但沒有測試過不保證能夠成功執行

最後就是程式架構本身。雖然課上沒有教過flask，但是語法本身不難，好上手。而課上有用過的php又因為要與人臉辨識的python做串接的話難度會直線上升，php本身語法方面也沒有詳細教過
所以還是推薦使用flask，當然實際要做專案的話還是要像Django那樣嚴謹的方出很多檔案，將不同功能的程式碼分類在不同的資料夾會比較好。但是如果只是單純的要讓小程式跑起來的話，這樣其實也就很夠了

雖然組別不同，但也希望可以多多交流
也希望如果你們那組在主要的模型訓練以外的一些雜七雜八程式架構上有問題的話，也能夠在這邊找到值得參考的部分



附上我的github連結: https://github.com/linche0502